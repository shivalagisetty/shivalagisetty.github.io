{"version":3,"file":"static/js/281.1539c41d.chunk.js","mappings":"4OAEaA,GAAqBC,EAAAA,EAAAA,IAAO,UAAPA,CAAiBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gNAYtCC,GAAUH,EAAAA,EAAAA,IAAO,IAAPA,CAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yCAIrBG,GAAUL,EAAAA,EAAAA,IAAO,MAAPA,CAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+RAqBvBK,GAAiBP,EAAAA,EAAAA,IAAO,MAAPA,CAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2G,mBCqC3C,GAAeO,EAAAA,EAAAA,IAAf,EA3DoB,SAAHC,GAAyD,IAAnDC,EAAKD,EAALC,MAAOC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAAQC,EAACJ,EAADI,EAQvCC,EAAa,SAAHC,GAAwC,IAAlCC,EAAID,EAAJC,KAAMC,EAAGF,EAAHE,IAC1B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACT,MAAOO,EAAIG,MAAM,KAAK,GAAGC,UAChCH,EAAAA,EAAAA,KAAA,KACEF,KAAMA,EACNM,OAAO,SACPC,IAAI,sBAEJ,aAAYN,EAAII,UAEhBH,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CAACP,IAAKA,EAAKQ,MAAM,OAAOC,OAAO,UAHlCT,IAOb,EAEA,OACEC,EAAAA,EAAAA,KAACpB,EAAkB,CAAAuB,UACjBH,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,UAAU,KAAKC,aAAW,EAAAR,UAC/BH,EAAAA,EAAAA,KAACY,EAAAA,EAAG,CAACC,QAAQ,SAASC,MAAM,SAAQX,UAClCH,EAAAA,EAAAA,KAACZ,EAAc,CAAAe,UACbY,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGjB,SAAA,EAClCH,EAAAA,EAAAA,KAAA,MAAAG,SAAKR,EAAEH,MACPQ,EAAAA,EAAAA,KAAChB,EAAO,CAAAmB,SAAER,EAAEF,KACXC,IACCM,EAAAA,EAAAA,KAACqB,EAAAA,EAAM,CAACC,KAAK,SAASC,QAAS,kBAhC3BC,EAgC0C,eA/B1CC,SAASC,eAAeF,GAChCG,eAAe,CACrBC,SAAU,WAHG,IAACJ,CAgCoD,EAACrB,SACtDR,EAAED,MAGPqB,EAAAA,EAAAA,MAAC7B,EAAO,CAAAiB,SAAA,EACNH,EAAAA,EAAAA,KAACJ,EAAU,CACTE,KAAK,qCACLC,IAAI,gBAENC,EAAAA,EAAAA,KAACJ,EAAU,CACTE,KAAK,sCACLC,IAAI,kBAENC,EAAAA,EAAAA,KAACJ,EAAU,CACTE,KAAK,sCACLC,IAAI,4BAStB,G","sources":["components/MiddleBlock/styles.tsx","components/MiddleBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const MiddleBlockSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 7.5rem 0 3rem;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    padding: 5.5rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  padding: 0.75rem 0 0.75rem;\r\n`;\r\n\r\nexport const Socials = styled(\"div\")`\r\n  display: flex;\r\n  gap: 2rem;\r\n  justify-content: center;\r\n\r\n  a {\r\n    &:hover,\r\n    &:active,\r\n    &:focus {\r\n      -webkit-transform: scale(1.1);\r\n      -ms-transform: scale(1.1);\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    fill: rgb(255, 130, 92);\r\n  }\r\n`;\r\n\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  max-width: 570px;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import { Row, Col, Tooltip } from \"antd\";\r\nimport { withTranslation, TFunction } from \"react-i18next\";\r\nimport { Slide } from \"react-awesome-reveal\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { MiddleBlockSection, Content, ContentWrapper, Socials } from \"./styles\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\n\r\ninterface MiddleBlockProps {\r\n  title: string;\r\n  content: string;\r\n  button?: string;\r\n  t: TFunction;\r\n}\r\ninterface SocialLinkProps {\r\n  href: string;\r\n  src: string;\r\n}\r\nconst MiddleBlock = ({ title, content, button, t }: MiddleBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const SocialLink = ({ href, src }: SocialLinkProps) => {\r\n    return (\r\n      <Tooltip title={src.split('.')[0]}>\r\n        <a\r\n          href={href}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          key={src}\r\n          aria-label={src}\r\n        >\r\n          <SvgIcon src={src} width=\"25px\" height=\"25px\" />\r\n        </a>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <MiddleBlockSection>\r\n      <Slide direction=\"up\" triggerOnce>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <ContentWrapper>\r\n            <Col lg={24} md={24} sm={24} xs={24}>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {button && (\r\n                <Button name=\"submit\" onClick={() => scrollTo(\"mission\")}>\r\n                  {t(button)}\r\n                </Button>\r\n              )}\r\n              <Socials>\r\n                <SocialLink\r\n                  href=\"https://github.com/shivalagisetty/\"\r\n                  src=\"github.svg\"\r\n                />\r\n                <SocialLink\r\n                  href=\"https://www.linkedin.com/in/lss311/\"\r\n                  src=\"linkedin.svg\"\r\n                />\r\n                <SocialLink\r\n                  href=\"https://medium.com/@sampathshiva311\"\r\n                  src=\"medium.svg\"\r\n                />\r\n              </Socials>\r\n            </Col>\r\n          </ContentWrapper>\r\n        </Row>\r\n      </Slide>\r\n    </MiddleBlockSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(MiddleBlock);\r\n"],"names":["MiddleBlockSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","Socials","_templateObject3","ContentWrapper","_templateObject4","withTranslation","_ref","title","content","button","t","SocialLink","_ref2","href","src","_jsx","Tooltip","split","children","target","rel","SvgIcon","width","height","Slide","direction","triggerOnce","Row","justify","align","_jsxs","Col","lg","md","sm","xs","Button","name","onClick","id","document","getElementById","scrollIntoView","behavior"],"sourceRoot":""}