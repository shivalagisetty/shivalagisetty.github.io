{"version":3,"file":"static/js/861.7fe257f8.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","components/ProjectBlock/styles.ts","components/IconStyle/index.tsx","components/ProjectBlock/index.tsx","pages/Home/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;  \r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","\"use client\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { renderToString } from \"react-dom/server\";\n\ninterface Icon {\n  x: number;\n  y: number;\n  z: number;\n  scale: number;\n  opacity: number;\n  id: number;\n}\n\ninterface IconCloudProps {\n  icons?: React.ReactNode[];\n  images?: string[];\n}\n\nfunction easeOutCubic(t: number): number {\n  return 1 - Math.pow(1 - t, 3);\n}\n\nexport function IconCloud({ icons, images }: IconCloudProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [iconPositions, setIconPositions] = useState<Icon[]>([]);\n  const [rotation, setRotation] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });\n  const [mousePos, setMousePos] = useState({ x: 0, y: 0 });\n  const [targetRotation, setTargetRotation] = useState<{\n    x: number;\n    y: number;\n    startX: number;\n    startY: number;\n    distance: number;\n    startTime: number;\n    duration: number;\n  } | null>(null);\n  const animationFrameRef = useRef<number>();\n  const rotationRef = useRef(rotation);\n  const iconCanvasesRef = useRef<HTMLCanvasElement[]>([]);\n  const imagesLoadedRef = useRef<boolean[]>([]);\n\n  // Create icon canvases once when icons/images change\n  useEffect(() => {\n    if (!icons && !images) return;\n\n    const items = icons || images || [];\n    imagesLoadedRef.current = new Array(items.length).fill(false);\n\n    const newIconCanvases = items.map((item, index) => {\n      const offscreen = document.createElement(\"canvas\");\n      offscreen.width = 40;\n      offscreen.height = 40;\n      const offCtx = offscreen.getContext(\"2d\");\n\n      if (offCtx) {\n        if (images) {\n          // Handle image URLs directly\n          const img = new Image();\n          img.crossOrigin = \"anonymous\";\n          img.src = items[index] as string;\n          img.onload = () => {\n            offCtx.clearRect(0, 0, offscreen.width, offscreen.height);\n\n            // Create circular clipping path\n            offCtx.beginPath();\n            offCtx.arc(20, 20, 20, 0, Math.PI * 2);\n            offCtx.closePath();\n            offCtx.clip();\n\n            // Draw the image\n            offCtx.drawImage(img, 0, 0, 40, 40);\n\n            imagesLoadedRef.current[index] = true;\n          };\n        } else {\n          // Handle SVG icons\n          offCtx.scale(0.4, 0.4);\n          const svgString = renderToString(item as React.ReactElement);\n          const img = new Image();\n          img.src = \"data:image/svg+xml;base64,\" + btoa(svgString);\n          img.onload = () => {\n            offCtx.clearRect(0, 0, offscreen.width, offscreen.height);\n            offCtx.drawImage(img, 0, 0);\n            imagesLoadedRef.current[index] = true;\n          };\n        }\n      }\n      return offscreen;\n    });\n\n    iconCanvasesRef.current = newIconCanvases;\n  }, [icons, images]);\n\n  // Generate initial icon positions on a sphere\n  useEffect(() => {\n    const items = icons || images || [];\n    const newIcons: Icon[] = [];\n    const numIcons = items.length || 20;\n\n    // Fibonacci sphere parameters\n    const offset = 2 / numIcons;\n    const increment = Math.PI * (3 - Math.sqrt(5));\n\n    for (let i = 0; i < numIcons; i++) {\n      const y = i * offset - 1 + offset / 2;\n      const r = Math.sqrt(1 - y * y);\n      const phi = i * increment;\n\n      const x = Math.cos(phi) * r;\n      const z = Math.sin(phi) * r;\n\n      newIcons.push({\n        x: x * 100,\n        y: y * 100,\n        z: z * 100,\n        scale: 1,\n        opacity: 1,\n        id: i,\n      });\n    }\n    setIconPositions(newIcons);\n  }, [icons, images]);\n\n  // Handle mouse events\n  const handleMouseDown = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const rect = canvasRef.current?.getBoundingClientRect();\n    if (!rect || !canvasRef.current) return;\n\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    const ctx = canvasRef.current.getContext(\"2d\");\n    if (!ctx) return;\n\n    iconPositions.forEach((icon) => {\n      const cosX = Math.cos(rotationRef.current.x);\n      const sinX = Math.sin(rotationRef.current.x);\n      const cosY = Math.cos(rotationRef.current.y);\n      const sinY = Math.sin(rotationRef.current.y);\n\n      const rotatedX = icon.x * cosY - icon.z * sinY;\n      const rotatedZ = icon.x * sinY + icon.z * cosY;\n      const rotatedY = icon.y * cosX + rotatedZ * sinX;\n\n      const screenX = canvasRef.current!.width / 2 + rotatedX;\n      const screenY = canvasRef.current!.height / 2 + rotatedY;\n\n      const scale = (rotatedZ + 200) / 300;\n      const radius = 20 * scale;\n      const dx = x - screenX;\n      const dy = y - screenY;\n\n      if (dx * dx + dy * dy < radius * radius) {\n        const targetX = -Math.atan2(\n          icon.y,\n          Math.sqrt(icon.x * icon.x + icon.z * icon.z)\n        );\n        const targetY = Math.atan2(icon.x, icon.z);\n\n        const currentX = rotationRef.current.x;\n        const currentY = rotationRef.current.y;\n        const distance = Math.sqrt(\n          Math.pow(targetX - currentX, 2) + Math.pow(targetY - currentY, 2)\n        );\n\n        const duration = Math.min(2000, Math.max(800, distance * 1000));\n\n        setTargetRotation({\n          x: targetX,\n          y: targetY,\n          startX: currentX,\n          startY: currentY,\n          distance,\n          startTime: performance.now(),\n          duration,\n        });\n        return;\n      }\n    });\n\n    setIsDragging(true);\n    setLastMousePos({ x: e.clientX, y: e.clientY });\n  };\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const rect = canvasRef.current?.getBoundingClientRect();\n    if (rect) {\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n      setMousePos({ x, y });\n    }\n\n    if (isDragging) {\n      const deltaX = e.clientX - lastMousePos.x;\n      const deltaY = e.clientY - lastMousePos.y;\n\n      rotationRef.current = {\n        x: rotationRef.current.x + deltaY * 0.002,\n        y: rotationRef.current.y + deltaX * 0.002,\n      };\n\n      setLastMousePos({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  // Animation and rendering\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext(\"2d\");\n    if (!canvas || !ctx) return;\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      const maxDistance = Math.sqrt(centerX * centerX + centerY * centerY);\n      const dx = mousePos.x - centerX;\n      const dy = mousePos.y - centerY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      const speed = 0.003 + (distance / maxDistance) * 0.01;\n\n      if (targetRotation) {\n        const elapsed = performance.now() - targetRotation.startTime;\n        const progress = Math.min(1, elapsed / targetRotation.duration);\n        const easedProgress = easeOutCubic(progress);\n\n        rotationRef.current = {\n          x:\n            targetRotation.startX +\n            (targetRotation.x - targetRotation.startX) * easedProgress,\n          y:\n            targetRotation.startY +\n            (targetRotation.y - targetRotation.startY) * easedProgress,\n        };\n\n        if (progress >= 1) {\n          setTargetRotation(null);\n        }\n      } else if (!isDragging) {\n        rotationRef.current = {\n          x: rotationRef.current.x + (dy / canvas.height) * speed,\n          y: rotationRef.current.y + (dx / canvas.width) * speed,\n        };\n      }\n\n      iconPositions.forEach((icon, index) => {\n        const cosX = Math.cos(rotationRef.current.x);\n        const sinX = Math.sin(rotationRef.current.x);\n        const cosY = Math.cos(rotationRef.current.y);\n        const sinY = Math.sin(rotationRef.current.y);\n\n        const rotatedX = icon.x * cosY - icon.z * sinY;\n        const rotatedZ = icon.x * sinY + icon.z * cosY;\n        const rotatedY = icon.y * cosX + rotatedZ * sinX;\n\n        const scale = (rotatedZ + 200) / 300;\n        const opacity = Math.max(0.2, Math.min(1, (rotatedZ + 150) / 200));\n\n        ctx.save();\n        ctx.translate(\n          canvas.width / 2 + rotatedX,\n          canvas.height / 2 + rotatedY\n        );\n        ctx.scale(scale, scale);\n        ctx.globalAlpha = opacity;\n\n        if (icons || images) {\n          // Only try to render icons/images if they exist\n          if (\n            iconCanvasesRef.current[index] &&\n            imagesLoadedRef.current[index]\n          ) {\n            ctx.drawImage(iconCanvasesRef.current[index], -20, -20, 40, 40);\n          }\n        } else {\n          // Show numbered circles if no icons/images are provided\n          ctx.beginPath();\n          ctx.arc(0, 0, 20, 0, Math.PI * 2);\n          ctx.fillStyle = \"#4444ff\";\n          ctx.fill();\n          ctx.fillStyle = \"white\";\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"middle\";\n          ctx.font = \"16px Arial\";\n          ctx.fillText(`${icon.id + 1}`, 0, 0);\n        }\n\n        ctx.restore();\n      });\n      animationFrameRef.current = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [icons, images, iconPositions, isDragging, mousePos, targetRotation]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={400}\n      height={400}\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onMouseLeave={handleMouseUp}\n      className=\"rounded-lg\"\n      aria-label=\"Interactive 3D Icon Cloud\"\n      role=\"img\"\n    />\n  );\n}\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ProjectBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\nimport { IconCloud } from \"../IconStyle\";\r\nimport { Socials } from \"../MiddleBlock/styles\";\r\n\r\ninterface SocialLinkProps {\r\n  href: string;\r\n  src: string;\r\n}\r\n\r\nconst ProjectBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ProjectBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const slugs = [\r\n    \"typescript\",\r\n    \"javascript\",\r\n    \"react\",\r\n    \"html5\",\r\n    \"css3\",\r\n    \"nodedotjs\",\r\n    \"express\",\r\n    \"nextdotjs\",\r\n    \"amazonwebservices\",\r\n    \"postgresql\",\r\n    \"nginx\",\r\n    \"jest\",\r\n    \"cypress\",\r\n    \"docker\",\r\n    \"git\",\r\n    \"jira\",\r\n    \"github\",\r\n    \"figma\",\r\n    \"mysql\",\r\n    \"python\",\r\n    \"googlegemini\",\r\n    \"crewai\",\r\n    \"openai\",\r\n    \"amazons3\",\r\n    \"go\",\r\n    'mui',\r\n    'antdesign'\r\n  ];\r\n  const images = slugs.map(\r\n    (slug) => `https://cdn.simpleicons.org/${slug}/${slug}`\r\n  );\r\n  const SocialLink = ({ href, src }: SocialLinkProps) => {\r\n    return (\r\n        <a\r\n          href={href}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          key={src}\r\n          aria-label={src}\r\n        >\r\n          <SvgIcon src={src} width=\"25px\" height=\"25px\" local = {false}/>\r\n        </a>\r\n    );\r\n  };\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <IconCloud images={images}/>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={() => scrollTo(\"about\")}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item,\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                              <Socials style={{justifyContent : 'flex-start'}}>\r\n                              {Object.keys(item?.links || {}).map(key =>  <SocialLink key={key} href={item?.links[key] } src={`https://cdn.simpleicons.org/${key}/${key}`}/>\r\n                              )}\r\n                              </Socials>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ProjectBlock);\r\n","import { lazy } from \"react\";\r\nimport IntroContent from \"../../content/IntroContent.json\";\r\nimport MiddleBlockContent from \"../../content/MiddleBlockContent.json\";\r\nimport AboutContent from \"../../content/AboutContent.json\";\r\nimport MissionContent from \"../../content/MissionContent.json\";\r\nimport ProductContent from \"../../content/ProductContent.json\";\r\nimport ContactContent from \"../../content/ContactContent.json\";\r\nimport ProjectBlock from \"../../components/ProjectBlock\";\r\n\r\nconst Contact = lazy(() => import(\"../../components/ContactForm\"));\r\nconst MiddleBlock = lazy(() => import(\"../../components/MiddleBlock\"));\r\nconst Container = lazy(() => import(\"../../common/Container\"));\r\nconst ScrollToTop = lazy(() => import(\"../../common/ScrollToTop\"));\r\nconst ContentBlock = lazy(() => import(\"../../components/ContentBlock\"));\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n      <ScrollToTop />\r\n      <ContentBlock\r\n        direction=\"right\"\r\n        title={IntroContent.title}\r\n        content={IntroContent.text}\r\n        icon=\"developer.svg\"\r\n        id=\"intro\"\r\n      />\r\n      <MiddleBlock\r\n        title={MiddleBlockContent.title}\r\n        content={MiddleBlockContent.text}\r\n        // button={MiddleBlockContent.button}\r\n        id=\"about\"\r\n      />\r\n      <ProjectBlock\r\n        direction=\"left\"\r\n        title={AboutContent.title}\r\n        content={AboutContent.text}\r\n        section={AboutContent.section}\r\n        icon=\"graphs.svg\"\r\n        id=\"projects\"\r\n      />\r\n      { /* <ContentBlock\r\n        direction=\"right\"\r\n        title={MissionContent.title}\r\n        content={MissionContent.text}\r\n        icon=\"product-launch.svg\"\r\n        id=\"mission\"\r\n      />\r\n      <ContentBlock\r\n        direction=\"left\"\r\n        title={ProductContent.title}\r\n        content={ProductContent.text}\r\n        icon=\"waving.svg\"\r\n        id=\"product\"\r\n      /> */}\r\n      {/* <Contact\r\n        title={ContactContent.title}\r\n        content={ContactContent.text}\r\n        id=\"contact\"\r\n      /> */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["StyledButton","styled","_templateObject","_taggedTemplateLiteral","p","color","Button","_ref","children","onClick","_jsx","ContentSection","Content","_templateObject2","StyledRow","Row","_templateObject3","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","IconCloud","icons","images","canvasRef","useRef","_useState","useState","_useState2","_slicedToArray","iconPositions","setIconPositions","_useState3","x","y","_useState4","rotation","_useState5","_useState6","isDragging","setIsDragging","_useState7","_useState8","lastMousePos","setLastMousePos","_useState9","_useState10","mousePos","setMousePos","_useState11","_useState12","targetRotation","setTargetRotation","animationFrameRef","rotationRef","iconCanvasesRef","imagesLoadedRef","useEffect","items","current","Array","length","fill","newIconCanvases","map","item","index","offscreen","document","createElement","width","height","offCtx","getContext","img","Image","crossOrigin","src","onload","clearRect","beginPath","arc","Math","PI","closePath","clip","drawImage","scale","svgString","renderToString","btoa","newIcons","numIcons","offset","increment","sqrt","i","r","phi","cos","z","sin","push","opacity","id","handleMouseUp","canvas","ctx","animate","t","centerX","centerY","maxDistance","dx","dy","speed","elapsed","performance","now","startTime","progress","min","duration","easedProgress","pow","startX","startY","forEach","icon","cosX","sinX","cosY","sinY","rotatedX","rotatedZ","rotatedY","max","save","translate","globalAlpha","fillStyle","textAlign","textBaseline","font","fillText","concat","restore","requestAnimationFrame","cancelAnimationFrame","ref","onMouseDown","e","_canvasRef$current","rect","getBoundingClientRect","clientX","left","clientY","top","screenX","screenY","radius","targetX","atan2","targetY","currentX","currentY","distance","onMouseMove","_canvasRef$current2","deltaX","deltaY","onMouseUp","onMouseLeave","className","role","withTranslation","title","content","section","button","slug","SocialLink","_ref2","href","target","rel","SvgIcon","local","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","getElementById","scrollIntoView","behavior","scrollTo","span","Socials","style","justifyContent","Object","keys","links","key","MiddleBlock","lazy","Container","ScrollToTop","ContentBlock","IntroContent","MiddleBlockContent","ProjectBlock","AboutContent"],"sourceRoot":""}